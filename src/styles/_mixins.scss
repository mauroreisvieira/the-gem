@mixin prefixr($property, $value...) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  #{$property}: $value;
}

@mixin media-query($media-query) {
  @if $media-query == "small" {
    @media only screen and (max-width: $medium - 1) { @content; }
  }

  @if $media-query == "small-only" {
    @media only screen and (min-width: $xSmall) and (max-width: $large - 1) { @content; }
  }

  @if $media-query == "medium" {
    @media only screen and (min-width: $medium) { @content; }
  }

  @if $media-query == "medium-only" {
    @media only screen and (min-width: $medium) and (max-width: $large - 1) { @content; }
  }

  @if $media-query == "large" {
    @media only screen and (min-width: $large) { @content; }
  }

  @if $media-query == "huge" {
    @media only screen and (min-width: $huge) { @content; }
  }
}

// Just some helpers...
@mixin small {
  @include media-query(small) {
    @content;
  }
}

@mixin small-only { @include media-query(small-only) { @content }; }

@mixin medium { @include media-query(medium) { @content }; }

@mixin medium-only { @include media-query(medium-only) { @content }; }
@mixin large { @include media-query(large) { @content }; }
@mixin huge { @include media-query(huge) { @content }; }


@mixin keyframes($animation-name){
  @-webkit-keyframes $animation-name{
    @content;
  }

  @-moz-keyframes $animation-name{
    @content;
  }

  @-ms-keyframes $animation-name {
    @content;
  }

  @keyframes $animation-name {
    @content;
  }
}

// Mixin to constrain elements
@mixin container($isRelative: false) {
  @include prefixr(box-sizing, content-box);

  @if $isRelative {
    position: relative;
  }

  margin-right: auto;
  margin-left: auto;

  @include medium {
    max-width: $mediumContainer;
    padding-right: 4.8%;
    padding-left: 4.8%;
  }

  @include large {
    max-width: $largeContainer;
    padding-right: 4.4%;
    padding-left: 4.4%;
  }
}

